import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Textarea } from '@/components/ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { ArrowLeft, MessageCircle, Loader2, CheckCircle, Send } from 'lucide-react';
import { useNavigate } from 'react-router-dom';
import { useToast } from '@/hooks/use-toast';

const KnowledgeSimplifier = () => {
  const navigate = useNavigate();
  const { toast } = useToast();
  const [question, setQuestion] = useState('');
  const [language, setLanguage] = useState('marathi');
  const [isProcessing, setIsProcessing] = useState(false);
  const [answer, setAnswer] = useState('');

  const handleAskQuestion = async () => {
    if (!question.trim()) {
      toast({
        title: "Please enter a question",
        description: "Ask any question in your regional language",
        variant: "destructive"
      });
      return;
    }

    setIsProcessing(true);
    
    setTimeout(() => {
      const sampleAnswers: {[key: string]: string} = {
        marathi: `рдкреНрд░рд╢реНрди: "${question}"

ЁЯМЯ рд╕реЛрдкреЗ рдЙрддреНрддрд░:
рдЖрдХрд╛рд╢ рдирд┐рд│реЗ рджрд┐рд╕рддреЗ рдХрд╛рд░рдг рд╕реВрд░реНрдпрд╛рдЪреНрдпрд╛ рдкреНрд░рдХрд╛рд╢рд╛рдд рд╕рд░реНрд╡ рд░рдВрдЧ рдЕрд╕рддрд╛рдд. рдЬреЗрд╡реНрд╣рд╛ рд╣рд╛ рдкреНрд░рдХрд╛рд╢ рд╣рд╡реЗрддреАрд▓ рдЫреЛрдЯреНрдпрд╛ рдХрдгрд╛рдВрдирд╛ рднреЗрдЯрддреЛ, рддреЗрд╡реНрд╣рд╛ рдирд┐рд│рд╛ рд░рдВрдЧ рдЗрддрд░ рд░рдВрдЧрд╛рдВрдкреЗрдХреНрд╖рд╛ рдЬрд╛рд╕реНрдд рдкрд╕рд░рддреЛ.

ЁЯПа рд╕реНрдерд╛рдирд┐рдХ рдЙрджрд╛рд╣рд░рдг:
рдЬрд╕реЗ рдЖрдкрдг рджреБрдзрд╛рдд рдирд┐рд│рд╛ рд░рдВрдЧ рдорд┐рд╕рд│рд▓рд╛ рддрд░ рд╕рдВрдкреВрд░реНрдг рджреВрдз рдирд┐рд│реЗ рд╣реЛрддреЗ, рддрд╕реЗрдЪ рдЖрдХрд╛рд╢рд╛рддреАрд▓ рдирд┐рд│рд╛ рдкреНрд░рдХрд╛рд╢ рд╕рд░реНрд╡рддреНрд░ рдкрд╕рд░рддреЛ.

ЁЯТб рдореБрдЦреНрдп рдореБрджреНрджреЗ:
тАв рд╕реВрд░реНрдпрд╛рдЪреНрдпрд╛ рдкреНрд░рдХрд╛рд╢рд╛рдд рд╕рд╛рдд рд░рдВрдЧ рдЕрд╕рддрд╛рдд
тАв рдирд┐рд│рд╛ рд░рдВрдЧ рд╕рд░реНрд╡рд╛рдд рдЬрд╛рд╕реНрдд рдкрд╕рд░рддреЛ
тАв рдореНрд╣рдгреВрди рдЖрдХрд╛рд╢ рдирд┐рд│реЗ рджрд┐рд╕рддреЗ`,

        hindi: `рдкреНрд░рд╢реНрди: "${question}"

ЁЯМЯ рдЖрд╕рд╛рди рдЬрд╡рд╛рдм:
рдЖрд╕рдорд╛рди рдиреАрд▓рд╛ рджрд┐рдЦрддрд╛ рд╣реИ рдХреНрдпреЛрдВрдХрд┐ рд╕реВрд░рдЬ рдХреА рд░реЛрд╢рдиреА рдореЗрдВ рд╕рднреА рд░рдВрдЧ рд╣реЛрддреЗ рд╣реИрдВред рдЬрдм рдпрд╣ рд░реЛрд╢рдиреА рд╣рд╡рд╛ рдХреЗ рдЫреЛрдЯреЗ рдХрдгреЛрдВ рд╕реЗ рдЯрдХрд░рд╛рддреА рд╣реИ, рддреЛ рдиреАрд▓рд╛ рд░рдВрдЧ рджреВрд╕рд░реЗ рд░рдВрдЧреЛрдВ рд╕реЗ рдЬреНрдпрд╛рджрд╛ рдлреИрд▓рддрд╛ рд╣реИред

ЁЯПа рд╕реНрдерд╛рдиреАрдп рдЙрджрд╛рд╣рд░рдг:
рдЬреИрд╕реЗ рджреВрдз рдореЗрдВ рдиреАрд▓рд╛ рд░рдВрдЧ рдорд┐рд▓рд╛рдиреЗ рд╕реЗ рдкреВрд░рд╛ рджреВрдз рдиреАрд▓рд╛ рд╣реЛ рдЬрд╛рддрд╛ рд╣реИ, рд╡реИрд╕реЗ рд╣реА рдЖрд╕рдорд╛рди рдореЗрдВ рдиреАрд▓рд╛ рдкреНрд░рдХрд╛рд╢ рд╣рд░ рдЬрдЧрд╣ рдлреИрд▓ рдЬрд╛рддрд╛ рд╣реИред

ЁЯТб рдореБрдЦреНрдп рдмрд╛рддреЗрдВ:
тАв рд╕реВрд░рдЬ рдХреЗ рдкреНрд░рдХрд╛рд╢ рдореЗрдВ рд╕рд╛рдд рд░рдВрдЧ рд╣реИрдВ
тАв рдиреАрд▓рд╛ рд░рдВрдЧ рд╕рдмрд╕реЗ рдЬреНрдпрд╛рджрд╛ рдлреИрд▓рддрд╛ рд╣реИ
тАв рдЗрд╕рд▓рд┐рдП рдЖрд╕рдорд╛рди рдиреАрд▓рд╛ рджрд┐рдЦрддрд╛ рд╣реИ`,

        english: `Question: "${question}"

ЁЯМЯ Simple Answer:
The sky looks blue because sunlight contains all colors. When this light hits tiny particles in the air, blue light scatters more than other colors.

ЁЯПа Local Example:
Just like when you mix blue color in milk, the whole milk becomes blue - similarly, blue light spreads everywhere in the sky.

ЁЯТб Key Points:
тАв Sunlight has seven colors
тАв Blue light scatters the most
тАв That's why the sky appears blue`
      };
      
      setAnswer(sampleAnswers[language] || sampleAnswers.english);
      setIsProcessing(false);
      
      toast({
        title: "рдкреНрд░рд╢реНрдирд╛рдЪреЗ рдЙрддреНрддрд░ рддрдпрд╛рд░!",
        description: "Regional language answer ready"
      });
    }, 2000);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-blue-50 p-6">
      <div className="max-w-4xl mx-auto">
        <Button variant="ghost" onClick={() => navigate('/')} className="mb-6">
          <ArrowLeft className="h-4 w-4 mr-2" />
          Back to Home
        </Button>
        
        <Card className="mb-8">
          <CardHeader>
            <CardTitle className="text-2xl">GyaanGenie</CardTitle>
            <CardDescription>
              Ask questions in regional language and get simple explanations with local analogies
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-6">
            <div>
              <label className="text-sm font-medium text-gray-700 mb-2 block">
                Response Language
              </label>
              <Select value={language} onValueChange={setLanguage}>
                <SelectTrigger>
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="marathi">рдорд░рд╛рдареА (Marathi)</SelectItem>
                  <SelectItem value="hindi">рд╣рд┐рдВрджреА (Hindi)</SelectItem>
                  <SelectItem value="english">English</SelectItem>
                  <SelectItem value="tamil">родрооро┐ро┤рпН (Tamil)</SelectItem>
                  <SelectItem value="bengali">ржмрж╛ржВрж▓рж╛ (Bengali)</SelectItem>
                </SelectContent>
              </Select>
            </div>

            <div>
              <label className="text-sm font-medium text-gray-700 mb-2 block">
                Your Question (Regional Language)
              </label>
              <Textarea
                placeholder="рдЙрджрд╛рд╣рд░рдг: рдЖрдХрд╛рд╢ рдирд┐рд│реЗ рдХрд╛ рджрд┐рд╕рддреЗ? / рдЖрд╕рдорд╛рди рдиреАрд▓рд╛ рдХреНрдпреЛрдВ рджрд┐рдЦрддрд╛ рд╣реИ? / Why is the sky blue?"
                value={question}
                onChange={(e) => setQuestion(e.target.value)}
                className="min-h-[100px]"
              />
            </div>

            <Button 
              onClick={handleAskQuestion} 
              disabled={isProcessing}
              className="w-full bg-gradient-to-r from-green-600 to-green-700"
            >
              {isProcessing ? (
                <>
                  <Loader2 className="h-4 w-4 mr-2 animate-spin" />
                  Processing Question...
                </>
              ) : (
                <>
                  <Send className="h-4 w-4 mr-2" />
                  Get Simple Answer
                </>
              )}
            </Button>
          </CardContent>
        </Card>

        {answer && (
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2 text-green-700">
                <CheckCircle className="h-5 w-5" />
                Regional Language Answer
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="bg-gray-50 rounded-lg p-4 whitespace-pre-wrap text-sm">
                {answer}
              </div>
              <div className="flex gap-2 mt-4">
                <Button variant="outline" size="sm">Copy Answer</Button>
                <Button variant="outline" size="sm">Save Response</Button>
                <Button variant="outline" size="sm">Ask Follow-up</Button>
              </div>
            </CardContent>
          </Card>
        )}
      </div>
    </div>
  );
};

export default KnowledgeSimplifier;
